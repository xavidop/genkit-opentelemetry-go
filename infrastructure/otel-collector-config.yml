receivers:
  # Prometheus receiver to scrape metrics from Genkit telemetry endpoint
  prometheus:
    config:
      scrape_configs:
        - job_name: 'genkit-telemetry'
          scrape_interval: 15s
          static_configs:
            - targets: ['host.docker.internal:4033']
          metrics_path: '/metrics'
          scrape_timeout: 10s
        
        - job_name: 'otel-collector'
          scrape_interval: 15s
          static_configs:
            - targets: ['localhost:8888']

  # OTLP receiver for traces and metrics from applications
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # HTTP check receiver for health monitoring
  httpcheck:
    targets:
      - endpoint: http://host.docker.internal:4033
        method: GET
    collection_interval: 30s

processors:
  # Batch processor for better performance
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # Memory limiter to prevent OOM
  memory_limiter:
    limit_mib: 512
    check_interval: 5s

  # Resource processor to add metadata
  resource:
    attributes:
      - key: service.name
        value: "genkit-app"
        action: upsert
      - key: service.version
        value: "1.0.0"
        action: upsert
      - key: deployment.environment
        value: "development"
        action: upsert

exporters:
  # Export metrics to Prometheus
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: "genkit"
    const_labels:
      environment: "development"

  # Export metrics to Prometheus remote write (for Prometheus server)
  prometheusremotewrite:
    endpoint: "http://prometheus:9090/api/v1/write"
    headers:
      X-Prometheus-Remote-Write-Version: "0.1.0"

  # Debug exporter for debugging
  debug:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200

  # OTLP exporter for forwarding to other systems
  otlp:
    endpoint: jaeger:4317
    tls:
      insecure: true

extensions:
  # Health check extension
  health_check:
    endpoint: 0.0.0.0:13133

  # pprof extension for debugging
  pprof:
    endpoint: 0.0.0.0:1777

  # zpages extension for debugging
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    metrics:
      receivers: [prometheus, otlp, httpcheck]
      processors: [memory_limiter, resource, batch]
      exporters: [prometheus, prometheusremotewrite, debug]
    
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [otlp, debug]
    
    logs:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [debug]

  telemetry:
    logs:
      level: "info"
    metrics:
      #address: 0.0.0.0:8888
